version: "3.9"

services:
  node-app:
    build: .
    container_name: node-app
    ports:
      - "4000:4000"
    restart: unless-stopped
    environment:
      PORT: 4000
      REDIS_PORT: 6379
      REDIS_HOST: redis
      SESSION_PATH: /opt/app/session
      SECRET_KEY_FILE: /run/secrets/secret_key
      REDIS_URL_FILE: /run/secrets/redis_url
      SUPABASE_URL_FILE: /run/secrets/supabase_url
      SUPABASE_KEY_FILE: /run/secrets/supabase_key
    secrets:
      - secret_key
      - redis_url
      - supabase_url
      - supabase_key
    depends_on:
      redis:
        condition: service_healthy # Wait until Redis is fully ready
    volumes:
      - /session:/opt/app/session
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

secrets:
  secret_key:
    file: ./secrets/secret_key.txt
  redis_url:
    file: ./secrets/redis_url.txt
  supabase_url:
    file: ./secrets/supabase_url.txt
  supabase_key:
    file: ./secrets/supabase_key.txt

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge
